# Generated by Django 4.2.22 on 2025-06-17 10:00

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import invoice.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('purchase', '0001_initial'),
        ('inventory', '0001_initial'),
        ('customer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('invoice_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('invoice_number', models.IntegerField(blank=True, default=0, null=True)),
                ('total_amount', models.FloatField(blank=True, default=0, null=True)),
                ('discount', models.CharField(blank=True, max_length=10, null=True)),
                ('discount_value', models.FloatField(blank=True, default=None, null=True)),
                ('exchange_value', models.FloatField(blank=True, default=None, null=True)),
                ('cash', models.FloatField(blank=True, default=None, null=True)),
                ('card', models.FloatField(blank=True, default=None, null=True)),
                ('upi', models.FloatField(blank=True, default=None, null=True)),
                ('credit', models.FloatField(blank=True, default=None, null=True)),
                ('headline', models.CharField(blank=True, max_length=100, null=True)),
                ('round_off', models.FloatField(blank=True, default=None, null=True)),
                ('invoice_type', models.IntegerField(blank=True, default=0, null=True)),
                ('cancel_no', models.IntegerField(blank=True, default=None, null=True)),
                ('sync_offline', models.BigIntegerField(blank=True, default=invoice.models.initial_sync_offline, null=True)),
                ('sync_online', models.BigIntegerField(blank=True, default=invoice.models.initial_sync_online, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='customer.customer')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('tax_rate', models.FloatField(default=0)),
                ('unit', models.FloatField(default=0)),
                ('qty', models.FloatField(default=0)),
                ('sale_price', models.FloatField(default=0)),
                ('discount', models.CharField(blank=True, max_length=10, null=True)),
                ('actual_sale_price', models.FloatField(default=0)),
                ('sync_offline', models.BigIntegerField(blank=True, default=invoice.models.initial_sync_offline, null=True)),
                ('sync_online', models.BigIntegerField(blank=True, default=invoice.models.initial_sync_online, null=True)),
                ('inventory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.inventory')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invoice.invoice')),
                ('stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='purchase.stock')),
            ],
        ),
        migrations.CreateModel(
            name='Point_Entry',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('entry_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('point', models.FloatField(blank=True, default=0, null=True)),
                ('balance', models.FloatField(blank=True, default=0, null=True)),
                ('description', models.CharField(blank=True, max_length=75, null=True)),
                ('sync_offline', models.BigIntegerField(blank=True, default=invoice.models.initial_sync_offline, null=True)),
                ('sync_online', models.BigIntegerField(blank=True, default=invoice.models.initial_sync_online, null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='customer.customer')),
                ('invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='invoice.invoice')),
            ],
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['company'], name='invoice_inv_company_29475d_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_date'], name='invoice_inv_invoice_54f3c0_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['company', 'invoice_date'], name='invoice_inv_company_7d4bf5_idx'),
        ),
    ]
