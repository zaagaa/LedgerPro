# Generated by Django 4.2.22 on 2025-06-17 10:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import purchase.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('attribute', '0001_initial'),
        ('company', '0001_initial'),
        ('tax_code', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('inventory', '0001_initial'),
        ('supplier', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=25, null=True)),
                ('transaction_date', models.DateField(blank=True, null=True)),
                ('discount', models.CharField(blank=True, max_length=10, null=True)),
                ('round_off', models.FloatField(blank=True, default=0, null=True)),
                ('other_charges', models.FloatField(blank=True, default=0, null=True)),
                ('payable_amount', models.FloatField(blank=True, default=0, null=True)),
                ('finish', models.IntegerField(blank=True, default=0, null=True)),
                ('stock_only', models.IntegerField(blank=True, default=0, null=True)),
                ('total_margin', models.FloatField(blank=True, null=True)),
                ('verify', models.IntegerField(blank=True, default=None, null=True)),
                ('finish_upload', models.BooleanField(default=False)),
                ('sync_offline', models.BigIntegerField(blank=True, default=purchase.models.initial_sync_offline, null=True)),
                ('sync_online', models.BigIntegerField(blank=True, default=purchase.models.initial_sync_online, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='supplier.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('barcode', models.BigIntegerField(unique=True)),
                ('pre_barcode', models.CharField(blank=True, max_length=550, null=True)),
                ('tax_rate', models.FloatField(default=0)),
                ('buy_price', models.FloatField(default=0)),
                ('discount', models.CharField(blank=True, max_length=10, null=True)),
                ('unit', models.FloatField(default=0)),
                ('qty', models.FloatField(default=0)),
                ('sale_price', models.FloatField(default=0)),
                ('mrp', models.FloatField(default=0)),
                ('sold', models.FloatField(blank=True, default=0, null=True)),
                ('mfg_date', models.DateField(blank=True, default=None, null=True)),
                ('exp_date', models.DateField(blank=True, default=None, null=True)),
                ('best_before', models.CharField(blank=True, max_length=50, null=True)),
                ('sticker', models.IntegerField(blank=True, default=None, null=True)),
                ('sync_offline', models.BigIntegerField(blank=True, default=purchase.models.initial_sync_offline, null=True)),
                ('sync_online', models.BigIntegerField(blank=True, default=purchase.models.initial_sync_online, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('inventory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.inventory')),
                ('purchase', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='purchase.purchase')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='supplier.supplier')),
                ('tax_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tax_code.tax_code')),
            ],
        ),
        migrations.CreateModel(
            name='Stock_Attribute',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('sync_offline', models.BigIntegerField(blank=True, default=purchase.models.initial_sync_offline, null=True)),
                ('sync_online', models.BigIntegerField(blank=True, default=purchase.models.initial_sync_online, null=True)),
                ('attribute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='attribute.attribute')),
                ('purchase', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='purchase.purchase')),
                ('stock', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='purchase.stock')),
            ],
        ),
        migrations.CreateModel(
            name='Sticker',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('sticker_name', models.CharField(blank=True, max_length=50, null=True)),
                ('column', models.IntegerField(blank=True, default=0, null=True)),
                ('sticker_code', models.TextField(blank=True, null=True)),
                ('sync_offline', models.BigIntegerField(blank=True, default=purchase.models.initial_sync_offline, null=True)),
                ('sync_online', models.BigIntegerField(blank=True, default=purchase.models.initial_sync_online, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseScan',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('image', models.ImageField(upload_to='purchase_scans/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('sync_offline', models.BigIntegerField(blank=True, default=purchase.models.initial_sync_offline, null=True)),
                ('sync_online', models.BigIntegerField(blank=True, default=purchase.models.initial_sync_online, null=True)),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='purchase.purchase')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('entry_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('transaction_date', models.DateField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=150, null=True)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('paid_by', models.CharField(blank=True, max_length=15, null=True)),
                ('tran_no', models.CharField(blank=True, max_length=100, null=True)),
                ('cheque_cleared', models.IntegerField(blank=True, default=0, null=True)),
                ('cheque_given', models.IntegerField(blank=True, default=0, null=True)),
                ('bank_checked', models.IntegerField(blank=True, default=0, null=True)),
                ('verify', models.IntegerField(blank=True, default=None, null=True)),
                ('sync_offline', models.BigIntegerField(blank=True, default=purchase.models.initial_sync_offline, null=True)),
                ('sync_online', models.BigIntegerField(blank=True, default=purchase.models.initial_sync_online, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('purchase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='purchase.purchase')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supplier.supplier')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ColumnPreference',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('columns', models.JSONField(default=list)),
                ('sync_offline', models.BigIntegerField(blank=True, default=purchase.models.initial_sync_offline, null=True)),
                ('sync_online', models.BigIntegerField(blank=True, default=purchase.models.initial_sync_online, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['barcode'], name='purchase_st_barcode_4e9988_idx'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['pre_barcode'], name='purchase_st_pre_bar_903ab1_idx'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['company'], name='purchase_st_company_989135_idx'),
        ),
    ]
